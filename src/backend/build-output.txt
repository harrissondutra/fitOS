
> fitos-backend@1.0.0 build
> tsc

src/agents/ai-nutrition-agent.ts(325,47): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.
  Type 'null' is not assignable to type 'string'.
src/agents/ai-nutrition-agent.ts(326,42): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.
  Type 'null' is not assignable to type 'string'.
src/agents/ai-nutrition-agent.ts(353,94): error TS2345: Argument of type 'number' is not assignable to parameter of type 'string[]'.
src/agents/ai-nutrition-agent.ts(376,24): error TS2345: Argument of type 'any' is not assignable to parameter of type 'never'.
src/agents/ai-nutrition-agent.ts(414,28): error TS2345: Argument of type '{ name: string; dosage: string; frequency: string; duration: string; reason: string; interactions: never[]; contraindications: string[]; }' is not assignable to parameter of type 'never'.
src/agents/ai-nutrition-agent.ts(426,28): error TS2345: Argument of type '{ name: string; dosage: string; frequency: string; duration: string; reason: string; interactions: string[]; contraindications: string[]; }' is not assignable to parameter of type 'never'.
src/agents/ai-nutrition-agent.ts(439,28): error TS2345: Argument of type '{ name: string; dosage: string; frequency: string; duration: string; reason: string; interactions: never[]; contraindications: string[]; }' is not assignable to parameter of type 'never'.
src/agents/ai-nutrition-agent.ts(452,21): error TS2345: Argument of type '"Consulte seu médico antes de iniciar qualquer suplemento devido aos medicamentos em uso"' is not assignable to parameter of type 'never'.
src/agents/ai-nutrition-agent.ts(576,37): error TS2339: Property 'dateOfBirth' does not exist on type '{ user: { status: string; id: string; tenantId: string | null; createdAt: Date; updatedAt: Date; name: string | null; email: string; firstName: string | null; lastName: string | null; ... 7 more ...; googleId: string | null; }; } & { ...; }'.
src/agents/ai-nutrition-agent.ts(581,27): error TS2339: Property 'medications' does not exist on type '{ user: { status: string; id: string; tenantId: string | null; createdAt: Date; updatedAt: Date; name: string | null; email: string; firstName: string | null; lastName: string | null; ... 7 more ...; googleId: string | null; }; } & { ...; }'.
src/agents/ai-nutrition-agent.ts(633,11): error TS2353: Object literal may only specify known properties, and 'analysisId' does not exist in type 'Without<AIGenerationLogCreateInput, AIGenerationLogUncheckedCreateInput> & AIGenerationLogUncheckedCreateInput'.
src/agents/ai-nutrition-agent.ts(674,28): error TS2345: Argument of type '"Considere aumentar a ingestão calórica"' is not assignable to parameter of type 'never'.
src/agents/ai-nutrition-agent.ts(677,24): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
src/agents/ai-nutrition-agent.ts(678,28): error TS2345: Argument of type '"Aumente a ingestão de proteínas"' is not assignable to parameter of type 'never'.
src/agents/ai-nutrition-agent.ts(688,21): error TS2345: Argument of type '"Verifique se não há alimentos alergênicos no diário"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(366,74): error TS2345: Argument of type 'JsonValue' is not assignable to parameter of type 'any[]'.
  Type 'null' is not assignable to type 'any[]'.
src/agents/crm-analytics-agent.ts(504,9): error TS2353: Object literal may only specify known properties, and 'closedAt' does not exist in type 'DealSelect<DefaultArgs>'.
src/agents/crm-analytics-agent.ts(589,26): error TS2345: Argument of type '{ stage: any; issue: string; impact: "high"; recommendation: string; }' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(629,9): error TS2353: Object literal may only specify known properties, and 'deals' does not exist in type 'NutritionClientInclude<DefaultArgs>'.
src/agents/crm-analytics-agent.ts(649,24): error TS2345: Argument of type '"Sem atividade recente"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(655,24): error TS2345: Argument of type '"Poucas consultas realizadas"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(662,24): error TS2345: Argument of type '"Histórico de negócios perdidos"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(669,24): error TS2345: Argument of type '"Cliente novo"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(693,18): error TS2345: Argument of type '{ factor: string; weight: number; value: number; impact: "positive"; }' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(703,18): error TS2345: Argument of type '{ factor: string; weight: number; value: number; impact: "positive"; }' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(713,18): error TS2345: Argument of type '{ factor: string; weight: number; value: number; impact: "positive"; }' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(723,18): error TS2345: Argument of type '{ factor: string; weight: number; value: number; impact: string; }' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(733,18): error TS2345: Argument of type '{ factor: string; weight: number; value: number; impact: "positive"; }' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(859,20): error TS2345: Argument of type '"Entrar em contato imediatamente"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(863,20): error TS2345: Argument of type '"Agendar consulta de follow-up"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(867,20): error TS2345: Argument of type '"Revisar estratégia de abordagem"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(889,11): error TS2353: Object literal may only specify known properties, and 'analysisId' does not exist in type 'Without<AIGenerationLogCreateInput, AIGenerationLogUncheckedCreateInput> & AIGenerationLogUncheckedCreateInput'.
src/agents/crm-analytics-agent.ts(932,9): error TS2353: Object literal may only specify known properties, and 'deals' does not exist in type 'UserInclude<DefaultArgs>'.
src/agents/crm-analytics-agent.ts(992,22): error TS2345: Argument of type '"Alta taxa de conversão"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(996,22): error TS2345: Argument of type '"Alto volume de negócios"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(1006,18): error TS2345: Argument of type '"Melhorar taxa de conversão"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(1010,18): error TS2345: Argument of type '"Aumentar volume de negócios"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(1020,28): error TS2345: Argument of type '"Focar na qualificação de leads"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(1021,28): error TS2345: Argument of type '"Melhorar técnicas de fechamento"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(1025,28): error TS2345: Argument of type '"Aumentar atividade de prospecção"' is not assignable to parameter of type 'never'.
src/agents/crm-analytics-agent.ts(1026,28): error TS2345: Argument of type '"Melhorar pipeline de leads"' is not assignable to parameter of type 'never'.
src/config/database.ts(58,41): error TS2554: Expected 0-2 arguments, but got 3.
src/config/plans.config.ts(276,5): error TS2322: Type 'number | boolean | "email" | "priority" | "24x7"' is not assignable to type 'number | boolean'.
  Type '"email"' is not assignable to type 'number | boolean'.
src/index.ts(49,10): error TS2614: Module '"./middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "./middleware/auth.middleware"' instead?
src/index.ts(346,11): error TS2345: Argument of type 'Promise<void | Logger>' is not assignable to parameter of type 'Promise<Logger>'.
  Type 'void | Logger' is not assignable to type 'Logger'.
    Type 'void' is not assignable to type 'Logger'.
src/index.ts(387,18): error TS2339: Property 'perf' does not exist on type 'Logger'.
src/middleware/auth.middleware.ts(32,34): error TS7030: Not all code paths return a value.
src/middleware/auth.middleware.ts(62,13): error TS2353: Object literal may only specify known properties, and 'isActive' does not exist in type 'TenantSelect<DefaultArgs>'.
src/middleware/auth.middleware.ts(75,15): error TS2339: Property 'isActive' does not exist on type '{ email: string; password: string | null; name: string | null; tenantId: string | null; status: string; id: string; firstName: string | null; lastName: string | null; createdAt: Date; ... 7 more ...; googleId: string | null; }'.
src/middleware/auth.middleware.ts(82,15): error TS2551: Property 'tenant' does not exist on type '{ email: string; password: string | null; name: string | null; tenantId: string | null; status: string; id: string; firstName: string | null; lastName: string | null; createdAt: Date; ... 7 more ...; googleId: string | null; }'. Did you mean 'tenantId'?
src/middleware/auth.middleware.ts(82,31): error TS2551: Property 'tenant' does not exist on type '{ email: string; password: string | null; name: string | null; tenantId: string | null; status: string; id: string; firstName: string | null; lastName: string | null; createdAt: Date; ... 7 more ...; googleId: string | null; }'. Did you mean 'tenantId'?
src/middleware/auth.middleware.ts(93,7): error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.
src/middleware/auth.middleware.ts(94,7): error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.
src/middleware/auth.middleware.ts(95,7): error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.
src/middleware/auth.middleware.ts(96,25): error TS2339: Property 'permissions' does not exist on type '{ email: string; password: string | null; name: string | null; tenantId: string | null; status: string; id: string; firstName: string | null; lastName: string | null; createdAt: Date; ... 7 more ...; googleId: string | null; }'.
src/middleware/auth.middleware.ts(128,10): error TS7030: Not all code paths return a value.
src/middleware/auth.middleware.ts(151,10): error TS7030: Not all code paths return a value.
src/middleware/auth.middleware.ts(174,10): error TS7030: Not all code paths return a value.
src/middleware/auth.middleware.ts(201,10): error TS7030: Not all code paths return a value.
src/middleware/auth.middleware.ts(228,10): error TS7030: Not all code paths return a value.
src/middleware/auth.middleware.ts(254,32): error TS7030: Not all code paths return a value.
src/middleware/auth.middleware.ts(293,17): error TS2353: Object literal may only specify known properties, and 'isActive' does not exist in type 'TenantSelect<DefaultArgs>'.
src/middleware/auth.middleware.ts(299,26): error TS2339: Property 'isActive' does not exist on type '{ email: string; password: string | null; name: string | null; tenantId: string | null; status: string; id: string; firstName: string | null; lastName: string | null; createdAt: Date; ... 7 more ...; googleId: string | null; }'.
src/middleware/auth.middleware.ts(299,43): error TS2551: Property 'tenant' does not exist on type '{ email: string; password: string | null; name: string | null; tenantId: string | null; status: string; id: string; firstName: string | null; lastName: string | null; createdAt: Date; ... 7 more ...; googleId: string | null; }'. Did you mean 'tenantId'?
src/middleware/auth.middleware.ts(303,13): error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.
src/middleware/auth.middleware.ts(304,13): error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.
src/middleware/auth.middleware.ts(305,13): error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.
src/middleware/auth.middleware.ts(306,31): error TS2339: Property 'permissions' does not exist on type '{ email: string; password: string | null; name: string | null; tenantId: string | null; status: string; id: string; firstName: string | null; lastName: string | null; createdAt: Date; ... 7 more ...; googleId: string | null; }'.
src/middleware/auth.middleware.ts(322,38): error TS7030: Not all code paths return a value.
src/middleware/auth.middleware.ts(343,41): error TS7030: Not all code paths return a value.
src/middleware/nutrition-permissions.ts(15,11): error TS2430: Interface 'AuthenticatedRequest' incorrectly extends interface 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/middleware/permissions.ts(10,11): error TS2430: Interface 'AuthenticatedRequest' incorrectly extends interface 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/middleware/plan-limits.middleware.ts(12,11): error TS2430: Interface 'RequestWithTenantAndAuth' incorrectly extends interface 'RequestWithTenant'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/middleware/role-based-access.middleware.ts(5,18): error TS2430: Interface 'AuthenticatedRequest' incorrectly extends interface 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/middleware/superAdmin.ts(10,7): error TS2717: Subsequent property declarations must have the same type.  Property 'user' must be of type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined', but here has type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
src/middleware/validate-scope.middleware.ts(6,18): error TS2430: Interface 'RequestWithTenant' incorrectly extends interface 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/middleware/validation.middleware.ts(507,10): error TS7030: Not all code paths return a value.
src/middleware/validation.middleware.ts(546,10): error TS7030: Not all code paths return a value.
src/middleware/validation.middleware.ts(585,10): error TS7030: Not all code paths return a value.
src/routes/admin/system-health.ts(74,24): error TS7030: Not all code paths return a value.
src/routes/admin/system-health.ts(133,24): error TS7030: Not all code paths return a value.
src/routes/admin/user-analytics.ts(51,27): error TS7030: Not all code paths return a value.
src/routes/admin/user-analytics.ts(93,26): error TS7030: Not all code paths return a value.
src/routes/admin/user-analytics.ts(211,26): error TS7030: Not all code paths return a value.
src/routes/ai-agents.routes.ts(29,38): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(54,38): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(91,38): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(120,38): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(149,38): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(184,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(209,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(240,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(269,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(298,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-agents.routes.ts(327,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/ai-costs.ts(3,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/analytics.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/analytics.ts(20,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/analytics.ts(24,3): error TS7030: Not all code paths return a value.
src/routes/appointment-comments.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/appointment-comments.ts(19,17): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-comments.ts(78,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-comments.ts(83,3): error TS7030: Not all code paths return a value.
src/routes/appointment-comments.ts(157,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-comments.ts(162,3): error TS7030: Not all code paths return a value.
src/routes/appointment-comments.ts(226,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-comments.ts(228,3): error TS7030: Not all code paths return a value.
src/routes/appointment-reminders.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/appointment-reminders.ts(19,17): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reminders.ts(77,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reminders.ts(85,3): error TS7030: Not all code paths return a value.
src/routes/appointment-reminders.ts(185,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reminders.ts(187,3): error TS7030: Not all code paths return a value.
src/routes/appointment-reminders.ts(241,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reminders.ts(247,3): error TS7030: Not all code paths return a value.
src/routes/appointment-reminders.ts(308,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reminders.ts(310,3): error TS7030: Not all code paths return a value.
src/routes/appointment-reminders.ts(374,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reminders.ts(376,3): error TS7030: Not all code paths return a value.
src/routes/appointment-reviews.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/appointment-reviews.ts(19,17): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reviews.ts(75,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reviews.ts(81,3): error TS7030: Not all code paths return a value.
src/routes/appointment-reviews.ts(159,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reviews.ts(161,3): error TS7030: Not all code paths return a value.
src/routes/appointment-reviews.ts(213,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reviews.ts(219,3): error TS7030: Not all code paths return a value.
src/routes/appointment-reviews.ts(281,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-reviews.ts(283,3): error TS7030: Not all code paths return a value.
src/routes/appointment-templates.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/appointment-templates.ts(19,17): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-templates.ts(42,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-templates.ts(48,3): error TS7030: Not all code paths return a value.
src/routes/appointment-templates.ts(85,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-templates.ts(87,3): error TS7030: Not all code paths return a value.
src/routes/appointment-templates.ts(122,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-templates.ts(128,3): error TS7030: Not all code paths return a value.
src/routes/appointment-templates.ts(175,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointment-templates.ts(177,3): error TS7030: Not all code paths return a value.
src/routes/appointments.ts(3,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/appointments.ts(35,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointments.ts(36,3): error TS7030: Not all code paths return a value.
src/routes/appointments.ts(157,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointments.ts(158,3): error TS7030: Not all code paths return a value.
src/routes/appointments.ts(198,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointments.ts(200,3): error TS7030: Not all code paths return a value.
src/routes/appointments.ts(239,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointments.ts(241,3): error TS7030: Not all code paths return a value.
src/routes/appointments.ts(314,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/appointments.ts(315,3): error TS7030: Not all code paths return a value.
src/routes/attendance.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/attendance.ts(19,17): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/attendance.ts(87,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/attendance.ts(92,3): error TS7030: Not all code paths return a value.
src/routes/attendance.ts(194,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/attendance.ts(196,3): error TS7030: Not all code paths return a value.
src/routes/attendance.ts(272,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/attendance.ts(274,3): error TS7030: Not all code paths return a value.
src/routes/attendance.ts(350,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/attendance.ts(355,3): error TS7030: Not all code paths return a value.
src/routes/attendance.ts(434,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/attendance.ts(436,3): error TS7030: Not all code paths return a value.
src/routes/audit-logs.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/audit-logs.ts(20,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/audit-logs.ts(29,3): error TS7030: Not all code paths return a value.
src/routes/audit-logs.ts(113,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/audit-logs.ts(115,3): error TS7030: Not all code paths return a value.
src/routes/auth.routes.ts(36,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/availability.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/availability.ts(23,22): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/availability.ts(46,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/availability.ts(52,3): error TS7030: Not all code paths return a value.
src/routes/availability.ts(102,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/availability.ts(108,3): error TS7030: Not all code paths return a value.
src/routes/availability.ts(154,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/availability.ts(156,3): error TS7030: Not all code paths return a value.
src/routes/availability.ts(199,23): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/availability.ts(222,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/availability.ts(228,3): error TS7030: Not all code paths return a value.
src/routes/availability.ts(269,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/availability.ts(275,3): error TS7030: Not all code paths return a value.
src/routes/availability.ts(331,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/availability.ts(333,3): error TS7030: Not all code paths return a value.
src/routes/bioimpedance.ts(4,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'AuthMiddleware'. Did you mean to use 'import AuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/bioimpedance.ts(22,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/bioimpedance.ts(122,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/bioimpedance.ts(163,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/bioimpedance.ts(291,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/bioimpedance.ts(334,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/bioimpedance.ts(377,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/client-goals.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/client-goals.ts(19,17): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/client-goals.ts(77,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/client-goals.ts(88,3): error TS7030: Not all code paths return a value.
src/routes/client-goals.ts(173,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/client-goals.ts(175,3): error TS7030: Not all code paths return a value.
src/routes/client-goals.ts(235,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/client-goals.ts(241,3): error TS7030: Not all code paths return a value.
src/routes/client-goals.ts(333,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/client-goals.ts(338,3): error TS7030: Not all code paths return a value.
src/routes/client-goals.ts(414,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/client-goals.ts(416,3): error TS7030: Not all code paths return a value.
src/routes/clients.ts(22,11): error TS2430: Interface 'RequestWithTenantAndAuth' incorrectly extends interface 'RequestWithTenant'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/routes/clients.ts(46,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/clients.ts(101,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/clients.ts(141,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/clients.ts(194,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/clients.ts(248,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/clients.ts(285,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/clients.ts(332,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/clients.ts(364,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/clients.ts(395,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/clients.ts(418,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/costs.ts(54,27): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(76,25): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(99,24): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(135,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(149,3): error TS7030: Not all code paths return a value.
src/routes/costs.ts(184,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(194,3): error TS7030: Not all code paths return a value.
src/routes/costs.ts(225,31): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(247,24): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(285,23): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(308,27): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(340,27): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(376,24): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(405,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(415,3): error TS7030: Not all code paths return a value.
src/routes/costs.ts(447,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(457,3): error TS7030: Not all code paths return a value.
src/routes/costs.ts(497,31): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(521,23): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(544,39): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(566,30): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(591,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(596,3): error TS7030: Not all code paths return a value.
src/routes/costs.ts(630,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/costs.ts(638,3): error TS7030: Not all code paths return a value.
src/routes/crm.routes.ts(8,35): error TS2307: Cannot find module '../../middleware/auth.middleware' or its corresponding type declarations.
src/routes/crm.routes.ts(9,33): error TS2307: Cannot find module '../../middleware/validation.middleware' or its corresponding type declarations.
src/routes/crm.routes.ts(10,34): error TS2307: Cannot find module '../../middleware/permissions' or its corresponding type declarations.
src/routes/crm.routes.ts(32,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(59,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(84,49): error TS7030: Not all code paths return a value.
src/routes/crm.routes.ts(113,53): error TS7030: Not all code paths return a value.
src/routes/crm.routes.ts(115,66): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(239,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(277,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(309,45): error TS7030: Not all code paths return a value.
src/routes/crm.routes.ts(444,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(477,54): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(504,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(531,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(557,51): error TS7030: Not all code paths return a value.
src/routes/crm.routes.ts(630,98): error TS7030: Not all code paths return a value.
src/routes/crm.routes.ts(663,68): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(693,43): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(694,44): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.routes.ts(695,50): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/crm.ts(3,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/crm.ts(17,12): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'PathParams'.
src/routes/crm.ts(33,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/crm.ts(34,3): error TS7030: Not all code paths return a value.
src/routes/crm.ts(123,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/crm.ts(124,3): error TS7030: Not all code paths return a value.
src/routes/crm.ts(160,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/crm.ts(161,3): error TS7030: Not all code paths return a value.
src/routes/crm.ts(440,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/crm.ts(441,3): error TS7030: Not all code paths return a value.
src/routes/dashboard.ts(3,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/dashboard.ts(14,22): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/dashboard.ts(177,25): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/dashboard.ts(253,38): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/dashboard.ts(301,30): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/exercises.ts(18,11): error TS2430: Interface 'RequestWithTenantAndAuth' incorrectly extends interface 'RequestWithTenant'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/routes/exercises.ts(90,87): error TS2345: Argument of type 'import("E:/Documentos/Desenvolvimento/Sistudo/fitOS/src/shared/types/auth.types").UserRole' is not assignable to parameter of type 'UserRole'.
  Type '"NUTRITIONIST"' is not assignable to type 'UserRole'.
src/routes/exercises.ts(128,87): error TS2345: Argument of type 'import("E:/Documentos/Desenvolvimento/Sistudo/fitOS/src/shared/types/auth.types").UserRole' is not assignable to parameter of type 'UserRole'.
  Type '"NUTRITIONIST"' is not assignable to type 'UserRole'.
src/routes/exercises.ts(465,101): error TS2345: Argument of type 'import("E:/Documentos/Desenvolvimento/Sistudo/fitOS/src/shared/types/auth.types").UserRole' is not assignable to parameter of type 'UserRole'.
  Type '"NUTRITIONIST"' is not assignable to type 'UserRole'.
src/routes/exercises.ts(495,107): error TS2345: Argument of type 'import("E:/Documentos/Desenvolvimento/Sistudo/fitOS/src/shared/types/auth.types").UserRole' is not assignable to parameter of type 'UserRole'.
  Type '"NUTRITIONIST"' is not assignable to type 'UserRole'.
src/routes/global-limits.ts(3,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'AuthMiddleware'. Did you mean to use 'import AuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/global-limits.ts(4,10): error TS2614: Module '"../middleware/validation.middleware"' has no exported member 'validateGlobalLimits'. Did you mean to use 'import validateGlobalLimits from "../middleware/validation.middleware"' instead?
src/routes/google-calendar.ts(3,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/google-calendar.ts(23,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/google-calendar.ts(58,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/google-calendar.ts(59,3): error TS7030: Not all code paths return a value.
src/routes/google-calendar.ts(90,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/google-calendar.ts(118,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/google-calendar.ts(175,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/integrations.ts(5,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'AuthMiddleware'. Did you mean to use 'import AuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/integrations/specific.ts(4,10): error TS2614: Module '"../../middleware/auth.middleware"' has no exported member 'AuthMiddleware'. Did you mean to use 'import AuthMiddleware from "../../middleware/auth.middleware"' instead?
src/routes/marketplace.ts(9,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/marketplace.ts(22,58): error TS7030: Not all code paths return a value.
src/routes/marketplace.ts(273,58): error TS7030: Not all code paths return a value.
src/routes/marketplace.ts(521,51): error TS7030: Not all code paths return a value.
src/routes/notifications.ts(3,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/nutrition.routes.ts(8,35): error TS2307: Cannot find module '../../middleware/auth.middleware' or its corresponding type declarations.
src/routes/nutrition.routes.ts(9,33): error TS2307: Cannot find module '../../middleware/validation.middleware' or its corresponding type declarations.
src/routes/nutrition.routes.ts(15,8): error TS2307: Cannot find module '../../middleware/nutrition-permissions' or its corresponding type declarations.
src/routes/nutrition.routes.ts(40,78): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(50,7): error TS2554: Expected 0-1 arguments, but got 2.
src/routes/nutrition.routes.ts(80,75): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(140,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(141,23): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(168,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(175,45): error TS2339: Property 'getMealPlans' does not exist on type 'MealPlanService'.
src/routes/nutrition.routes.ts(194,50): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(227,63): error TS2554: Expected 1 arguments, but got 2.
src/routes/nutrition.routes.ts(277,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(278,18): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(311,41): error TS2339: Property 'getAllRecipes' does not exist on type 'RecipeService'.
src/routes/nutrition.routes.ts(311,55): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(330,47): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(362,57): error TS2554: Expected 1 arguments, but got 2.
src/routes/nutrition.routes.ts(412,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(413,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(416,42): error TS2339: Property 'createFoodDiaryEntry' does not exist on type 'FoodDiaryService'.
src/routes/nutrition.routes.ts(441,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(442,41): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(449,44): error TS2551: Property 'getFoodDiaryEntries' does not exist on type 'FoodDiaryService'. Did you mean 'getDayEntries'?
src/routes/nutrition.routes.ts(471,42): error TS2339: Property 'updateFoodDiaryEntry' does not exist on type 'FoodDiaryService'.
src/routes/nutrition.routes.ts(493,28): error TS2339: Property 'deleteFoodDiaryEntry' does not exist on type 'FoodDiaryService'.
src/routes/nutrition.routes.ts(521,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(522,15): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(525,56): error TS2339: Property 'createProfessionalProfile' does not exist on type 'NutritionProfessionalService'.
src/routes/nutrition.routes.ts(544,53): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(547,56): error TS2339: Property 'getProfessionalProfileById' does not exist on type 'NutritionProfessionalService'.
src/routes/nutrition.routes.ts(573,62): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(576,56): error TS2339: Property 'getProfessionalProfileByUserId' does not exist on type 'NutritionProfessionalService'.
src/routes/nutrition.routes.ts(605,56): error TS2339: Property 'updateProfessionalProfile' does not exist on type 'NutritionProfessionalService'.
src/routes/nutrition.routes.ts(632,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(633,15): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(636,49): error TS2339: Property 'createNutritionClient' does not exist on type 'NutritionClientService'.
src/routes/nutrition.routes.ts(655,47): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(658,49): error TS2551: Property 'getNutritionClientById' does not exist on type 'NutritionClientService'. Did you mean 'getNutritionistClients'?
src/routes/nutrition.routes.ts(684,56): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(687,49): error TS2551: Property 'getNutritionClientByUserId' does not exist on type 'NutritionClientService'. Did you mean 'getNutritionistClients'?
src/routes/nutrition.routes.ts(716,49): error TS2339: Property 'updateNutritionClient' does not exist on type 'NutritionClientService'.
src/routes/nutrition.routes.ts(743,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(744,23): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(747,61): error TS2551: Property 'createConsultation' does not exist on type 'NutritionConsultationService'. Did you mean 'getConsultations'?
src/routes/nutrition.routes.ts(771,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(798,53): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(830,84): error TS2554: Expected 1 arguments, but got 2.
src/routes/nutrition.routes.ts(857,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(858,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(861,45): error TS2339: Property 'createNutritionGoal' does not exist on type 'NutritionGoalService'.
src/routes/nutrition.routes.ts(885,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(886,41): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(892,46): error TS2339: Property 'getNutritionGoals' does not exist on type 'NutritionGoalService'.
src/routes/nutrition.routes.ts(911,45): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(914,45): error TS2339: Property 'getNutritionGoalById' does not exist on type 'NutritionGoalService'.
src/routes/nutrition.routes.ts(943,45): error TS2339: Property 'updateNutritionGoal' does not exist on type 'NutritionGoalService'.
src/routes/nutrition.routes.ts(965,32): error TS2339: Property 'deleteNutritionGoal' does not exist on type 'NutritionGoalService'.
src/routes/nutrition.routes.ts(992,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(993,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(1020,41): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(1047,56): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(1135,17): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(1136,23): error TS18048: 'req.user' is possibly 'undefined'.
src/routes/nutrition.routes.ts(1189,64): error TS7030: Not all code paths return a value.
src/routes/nutrition.routes.ts(1221,85): error TS2554: Expected 1 arguments, but got 2.
src/routes/nutrition.routes.ts(1301,23): error TS2551: Property 'getMealPlanStats' does not exist on type 'MealPlanService'. Did you mean 'toggleMealPlanStatus'?
src/routes/nutrition.routes.ts(1302,24): error TS2339: Property 'getFoodDiaryStats' does not exist on type 'FoodDiaryService'.
src/routes/nutrition.routes.ts(1303,28): error TS2339: Property 'getNutritionGoalStats' does not exist on type 'NutritionGoalService'.
src/routes/nutrition.routes.ts(1345,23): error TS2551: Property 'getMealPlanStats' does not exist on type 'MealPlanService'. Did you mean 'toggleMealPlanStatus'?
src/routes/nutrition.routes.ts(1346,58): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string | undefined'.
src/routes/onboarding.routes.ts(67,36): error TS7030: Not all code paths return a value.
src/routes/onboarding.routes.ts(155,31): error TS7030: Not all code paths return a value.
src/routes/onboarding.routes.ts(209,9): error TS2353: Object literal may only specify known properties, and 'document' does not exist in type 'Without<UserCreateInput, UserUncheckedCreateInput> & UserUncheckedCreateInput'.
src/routes/onboarding.routes.ts(232,46): error TS2339: Property 'customerId' does not exist on type '{ subscriptionId: string; clientSecret: string; customerId: string; } | { paymentId: string; qrCode: string | undefined; qrCodeBase64: string | undefined; expiresAt: Date; }'.
  Property 'customerId' does not exist on type '{ paymentId: string; qrCode: string | undefined; qrCodeBase64: string | undefined; expiresAt: Date; }'.
src/routes/onboarding.routes.ts(233,50): error TS2339: Property 'subscriptionId' does not exist on type '{ subscriptionId: string; clientSecret: string; customerId: string; } | { paymentId: string; qrCode: string | undefined; qrCodeBase64: string | undefined; expiresAt: Date; }'.
  Property 'subscriptionId' does not exist on type '{ paymentId: string; qrCode: string | undefined; qrCodeBase64: string | undefined; expiresAt: Date; }'.
src/routes/onboarding.routes.ts(275,26): error TS7030: Not all code paths return a value.
src/routes/onboarding.routes.ts(330,9): error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.
src/routes/onboarding.routes.ts(332,9): error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.
src/routes/onboarding.routes.ts(371,33): error TS7030: Not all code paths return a value.
src/routes/onboarding.routes.ts(399,32): error TS2339: Property 'provider' does not exist on type '{ tenantId: string; status: string; id: string; metadata: JsonValue; createdAt: Date; updatedAt: Date; stripeSubscriptionId: string | null; planId: string; currentPeriodStart: Date; ... 4 more ...; paymentMethod: string | null; }'.
src/routes/onboarding.routes.ts(400,30): error TS2339: Property 'amount' does not exist on type '{ tenantId: string; status: string; id: string; metadata: JsonValue; createdAt: Date; updatedAt: Date; stripeSubscriptionId: string | null; planId: string; currentPeriodStart: Date; ... 4 more ...; paymentMethod: string | null; }'.
src/routes/onboarding.routes.ts(401,32): error TS2339: Property 'currency' does not exist on type '{ tenantId: string; status: string; id: string; metadata: JsonValue; createdAt: Date; updatedAt: Date; stripeSubscriptionId: string | null; planId: string; currentPeriodStart: Date; ... 4 more ...; paymentMethod: string | null; }'.
src/routes/payments.routes.ts(49,46): error TS7030: Not all code paths return a value.
src/routes/payments.routes.ts(88,37): error TS7030: Not all code paths return a value.
src/routes/payments.routes.ts(128,39): error TS7030: Not all code paths return a value.
src/routes/payments.routes.ts(167,44): error TS7030: Not all code paths return a value.
src/routes/payments.routes.ts(210,42): error TS7030: Not all code paths return a value.
src/routes/payments.routes.ts(253,44): error TS7030: Not all code paths return a value.
src/routes/payments.routes.ts(339,32): error TS7030: Not all code paths return a value.
src/routes/plan-limits.ts(28,11): error TS2430: Interface 'RequestWithTenantAndAuth' incorrectly extends interface 'RequestWithTenant'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/routes/plan-limits.ts(40,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/plan-limits.ts(85,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/plan-limits.ts(254,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/push.routes.ts(6,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/reports.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/reports.ts(23,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/reports.ts(30,3): error TS7030: Not all code paths return a value.
src/routes/settings.ts(20,11): error TS2430: Interface 'RequestWithTenantAndAuth' incorrectly extends interface 'RequestWithTenant'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/routes/settings.ts(76,23): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: any) => any' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: any) => any' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/settings.ts(101,23): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: any) => any' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: any) => any' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/settings.ts(264,29): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: RequestWithTenantAndAuth, res: Response, next: any) => any' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: RequestWithTenantAndAuth, res: Response, next: any) => any' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestWithTenantAndAuth'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/super-admin.ts(3,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/team-calendar.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/team-calendar.ts(20,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/team-calendar.ts(26,3): error TS7030: Not all code paths return a value.
src/routes/team-calendar.ts(95,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/team-calendar.ts(100,3): error TS7030: Not all code paths return a value.
src/routes/team-calendar.ts(223,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/team-calendar.ts(229,3): error TS7030: Not all code paths return a value.
src/routes/timeline.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/timeline.ts(20,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/timeline.ts(26,3): error TS7030: Not all code paths return a value.
src/routes/upload.ts(18,11): error TS2430: Interface 'RequestWithTenantAndAuth' incorrectly extends interface 'RequestWithTenant'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/routes/users.ts(22,11): error TS2430: Interface 'RequestWithTenantAndAuth' incorrectly extends interface 'RequestWithTenant'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/routes/webhooks/billing.routes.ts(13,32): error TS2307: Cannot find module '../services/billing.service' or its corresponding type declarations.
src/routes/webhooks/billing.routes.ts(28,24): error TS7030: Not all code paths return a value.
src/routes/webhooks/billing.routes.ts(42,7): error TS2322: Type '"2024-11-20.acacia"' is not assignable to type '"2023-10-16"'.
src/routes/webhooks/billing.routes.ts(101,29): error TS7030: Not all code paths return a value.
src/routes/webhooks/billing.routes.ts(217,9): error TS2322: Type '"stripe" | "mercadopago"' is not assignable to type 'AiProviderCreateNestedOneWithoutWebhookLogsInput | undefined'.
  Type '"stripe"' has no properties in common with type 'AiProviderCreateNestedOneWithoutWebhookLogsInput'.
src/routes/whatsapp.routes.ts(5,10): error TS2616: 'Joi' can only be imported by using 'import Joi = require("joi")' or a default import.
src/routes/whatsapp.routes.ts(76,7): error TS2353: Object literal may only specify known properties, and 'tenantId' does not exist in type 'WhatsAppMessage'.
src/routes/whatsapp.routes.ts(136,46): error TS7030: Not all code paths return a value.
src/routes/whatsapp.ts(2,10): error TS2614: Module '"../middleware/auth.middleware"' has no exported member 'getAuthMiddleware'. Did you mean to use 'import getAuthMiddleware from "../middleware/auth.middleware"' instead?
src/routes/whatsapp.ts(20,23): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/whatsapp.ts(91,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/whatsapp.ts(100,3): error TS7030: Not all code paths return a value.
src/routes/whatsapp.ts(146,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/whatsapp.ts(151,3): error TS7030: Not all code paths return a value.
src/routes/whatsapp.ts(211,3): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined'.
                Type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }' is not assignable to type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }'.
                  Types of property 'role' are incompatible.
                    Type 'string' is not assignable to type 'UserRole'.
src/routes/whatsapp.ts(217,3): error TS7030: Not all code paths return a value.
src/routes/workouts.ts(17,11): error TS2430: Interface 'RequestWithTenantAndAuth' incorrectly extends interface 'RequestWithTenant'.
  Types of property 'user' are incompatible.
    Type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; } | undefined' is not assignable to type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; } | undefined'.
      Property 'permissions' is missing in type '{ id: string; email: string; role: UserRole; tenantId?: string | undefined; name?: string | undefined; }' but required in type '{ id: string; email: string; name: string; tenantId: string; role: string; permissions: string[]; }'.
src/services/billing-overview.service.ts(16,8): error TS2307: Cannot find module '../../shared/types/billing-overview' or its corresponding type declarations.
src/services/billing.service.ts(60,11): error TS2564: Property 'stripe' has no initializer and is not definitely assigned in the constructor.
src/services/billing.service.ts(61,11): error TS2564: Property 'mercadoPago' has no initializer and is not definitely assigned in the constructor.
src/services/billing.service.ts(62,11): error TS2564: Property 'payment' has no initializer and is not definitely assigned in the constructor.
src/services/billing.service.ts(63,11): error TS2564: Property 'preference' has no initializer and is not definitely assigned in the constructor.
src/services/billing.service.ts(87,9): error TS2322: Type '"2024-11-20.acacia"' is not assignable to type '"2023-10-16"'.
src/services/billing.service.ts(259,11): error TS2353: Object literal may only specify known properties, and 'description' does not exist in type 'ProductData'.
src/services/billing.service.ts(367,13): error TS2741: Property 'id' is missing in type '{ title: string; quantity: number; unit_price: number; currency_id: string; }' but required in type 'Items'.
src/services/billing.service.ts(401,28): error TS2339: Property 'point_of_interaction' does not exist on type 'PreferenceResponse'.
src/services/billing.service.ts(402,34): error TS2339: Property 'point_of_interaction' does not exist on type 'PreferenceResponse'.
src/services/billing.service.ts(465,11): error TS2353: Object literal may only specify known properties, and 'provider' does not exist in type 'Without<SubscriptionCreateInput, SubscriptionUncheckedCreateInput> & SubscriptionUncheckedCreateInput'.
src/services/billing.service.ts(490,9): error TS2561: Object literal may only specify known properties, but 'providerSubscriptionId' does not exist in type 'SubscriptionWhereInput'. Did you mean to write 'stripeSubscriptionId'?
src/services/crm/automation-workflow.service.ts(95,11): error TS2353: Object literal may only specify known properties, and 'settings' does not exist in type 'Without<AutomationWorkflowCreateInput, AutomationWorkflowUncheckedCreateInput> & AutomationWorkflowUncheckedCreateInput'.
src/services/crm/automation-workflow.service.ts(253,13): error TS2322: Type 'string' is not assignable to type 'string[]'.
src/services/crm/automation-workflow.service.ts(366,11): error TS2353: Object literal may only specify known properties, and 'actionsExecuted' does not exist in type 'Without<AutomationExecutionCreateInput, AutomationExecutionUncheckedCreateInput> & AutomationExecutionUncheckedCreateInput'.
src/services/crm/automation-workflow.service.ts(376,28): error TS2488: Type 'string | number | boolean | JsonObject | JsonArray' must have a '[Symbol.iterator]()' method that returns an iterator.
src/services/crm/automation-workflow.service.ts(376,28): error TS18047: 'workflow.actions' is possibly 'null'.
src/services/crm/automation-workflow.service.ts(400,11): error TS2353: Object literal may only specify known properties, and 'actionsExecuted' does not exist in type '(Without<AutomationExecutionUpdateInput, AutomationExecutionUncheckedUpdateInput> & AutomationExecutionUncheckedUpdateInput) | (Without<...> & AutomationExecutionUpdateInput)'.
src/services/crm/automation-workflow.service.ts(584,19): error TS2353: Object literal may only specify known properties, and 'executionTime' does not exist in type 'AutomationExecutionSelect<DefaultArgs>'.
src/services/crm/automation-workflow.service.ts(588,55): error TS2339: Property 'executionTime' does not exist on type '{ status: string; id: string; createdAt: Date; updatedAt: Date; completedAt: Date | null; triggerData: JsonValue; errorMessage: string | null; workflowId: string; startedAt: Date; }'.
src/services/crm/crm-pipeline.service.ts(77,11): error TS2353: Object literal may only specify known properties, and 'settings' does not exist in type 'Without<CRMPipelineCreateInput, CRMPipelineUncheckedCreateInput> & CRMPipelineUncheckedCreateInput'.
src/services/crm/crm-pipeline.service.ts(89,15): error TS2353: Object literal may only specify known properties, and 'title' does not exist in type 'DealSelect<DefaultArgs>'.
src/services/crm/crm-pipeline.service.ts(141,15): error TS2353: Object literal may only specify known properties, and 'title' does not exist in type 'DealSelect<DefaultArgs>'.
src/services/crm/crm-pipeline.service.ts(202,15): error TS2353: Object literal may only specify known properties, and 'title' does not exist in type 'DealSelect<DefaultArgs>'.
src/services/crm/crm-pipeline.service.ts(252,13): error TS2322: Type 'string' is not assignable to type 'string[]'.
src/services/crm/crm-pipeline.service.ts(266,15): error TS2353: Object literal may only specify known properties, and 'title' does not exist in type 'DealSelect<DefaultArgs>'.
src/services/crm/crm-pipeline.service.ts(318,15): error TS2353: Object literal may only specify known properties, and 'title' does not exist in type 'DealSelect<DefaultArgs>'.
src/services/crm/crm-pipeline.service.ts(404,54): error TS2365: Operator '+' cannot be applied to types 'number' and 'number | Decimal'.
src/services/crm/crm-pipeline.service.ts(419,28): error TS18047: 'pipeline.stages' is possibly 'null'.
src/services/crm/crm-pipeline.service.ts(419,44): error TS2339: Property 'map' does not exist on type 'string | number | boolean | JsonObject | JsonArray'.
  Property 'map' does not exist on type 'string'.
src/services/crm/crm-pipeline.service.ts(421,61): error TS2365: Operator '+' cannot be applied to types 'number' and 'number | Decimal'.
src/services/crm/crm-pipeline.service.ts(469,11): error TS2322: Type 'JsonValue' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
  Type 'null' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
src/services/crm/crm-pipeline.service.ts(471,38): error TS2339: Property 'settings' does not exist on type '{ name: string; tenantId: string; isActive: boolean; id: string; createdAt: Date; updatedAt: Date; description: string | null; stages: JsonValue; }'.
src/services/crm/deal.service.ts(92,11): error TS2353: Object literal may only specify known properties, and 'title' does not exist in type 'Without<DealCreateInput, DealUncheckedCreateInput> & DealUncheckedCreateInput'.
src/services/crm/deal.service.ts(130,11): error TS2353: Object literal may only specify known properties, and 'assignedUser' does not exist in type 'DealInclude<DefaultArgs>'.
src/services/crm/deal.service.ts(143,43): error TS2339: Property 'title' does not exist on type '{ id: string; currency: string; description: string | null; status: string; tenantId: string; name: string; createdAt: Date; updatedAt: Date; source: string | null; clientId: string | null; ... 5 more ...; pipelineId: string; }'.
src/services/crm/deal.service.ts(209,11): error TS2353: Object literal may only specify known properties, and 'notes' does not exist in type 'DealInclude<DefaultArgs>'.
src/services/crm/deal.service.ts(283,11): error TS2353: Object literal may only specify known properties, and 'assignedUser' does not exist in type 'DealInclude<DefaultArgs>'.
src/services/crm/deal.service.ts(359,11): error TS2353: Object literal may only specify known properties, and 'assignedUser' does not exist in type 'DealInclude<DefaultArgs>'.
src/services/crm/deal.service.ts(372,43): error TS2339: Property 'title' does not exist on type '{ id: string; currency: string; description: string | null; status: string; tenantId: string; name: string; createdAt: Date; updatedAt: Date; source: string | null; clientId: string | null; ... 5 more ...; pipelineId: string; }'.
src/services/crm/deal.service.ts(394,43): error TS2339: Property 'title' does not exist on type '{ id: string; currency: string; description: string | null; status: string; tenantId: string; name: string; createdAt: Date; updatedAt: Date; source: string | null; clientId: string | null; ... 5 more ...; pipelineId: string; }'.
src/services/crm/deal.service.ts(429,13): error TS2353: Object literal may only specify known properties, and 'metadata' does not exist in type 'Without<DealActivityCreateInput, DealActivityUncheckedCreateInput> & DealActivityUncheckedCreateInput'.
src/services/crm/deal.service.ts(654,11): error TS2353: Object literal may only specify known properties, and 'assignedUser' does not exist in type 'DealInclude<DefaultArgs>'.
src/services/nutrition/index.ts(37,3): error TS2305: Module '"./food-database.service"' has no exported member 'FoodSearchResult'.
src/services/nutrition/index.ts(40,3): error TS2305: Module '"./food-database.service"' has no exported member 'FoodFilters'.
src/services/nutrition/index.ts(46,3): error TS2305: Module '"./meal-plan.service"' has no exported member 'MealPlanFilters'.
src/services/nutrition/index.ts(47,3): error TS2724: '"./meal-plan.service"' has no exported member named 'MealCreateInput'. Did you mean 'MealPlanCreateInput'?
src/services/nutrition/index.ts(48,3): error TS2724: '"./meal-plan.service"' has no exported member named 'MealItemCreateInput'. Did you mean 'MealItemInput'?
src/services/nutrition/index.ts(54,3): error TS2305: Module '"./recipe.service"' has no exported member 'RecipeFilters'.
src/services/nutrition/index.ts(55,3): error TS2724: '"./recipe.service"' has no exported member named 'RecipeIngredientCreateInput'. Did you mean 'RecipeIngredientInput'?
src/services/nutrition/index.ts(65,3): error TS2724: '"./nutrition-professional.service"' has no exported member named 'NutritionProfessionalProfileCreateInput'. Did you mean 'NutritionProfessionalCreateInput'?
src/services/nutrition/index.ts(66,3): error TS2724: '"./nutrition-professional.service"' has no exported member named 'NutritionProfessionalProfileUpdateInput'. Did you mean 'NutritionProfessionalUpdateInput'?
src/services/nutrition/index.ts(67,3): error TS2724: '"./nutrition-professional.service"' has no exported member named 'NutritionProfessionalProfileFilters'. Did you mean 'NutritionProfessionalSearchFilters'?
src/services/nutrition/index.ts(73,3): error TS2724: '"./nutrition-client.service"' has no exported member named 'NutritionClientFilters'. Did you mean 'NutritionClientSearchFilters'?
src/services/nutrition/laboratory-exam.service.ts(394,38): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string | undefined'.
src/services/nutrition/nutrition-client.service.ts(179,11): error TS2353: Object literal may only specify known properties, and 'goals' does not exist in type 'NutritionClientInclude<DefaultArgs>'.
src/services/nutrition/nutrition-consultation.service.ts(416,30): error TS2448: Block-scoped variable 'consultation' used before its declaration.
src/services/nutrition/nutrition-consultation.service.ts(416,88): error TS2448: Block-scoped variable 'consultation' used before its declaration.
src/services/nutrition/supplement-prescription.service.ts(85,11): error TS2353: Object literal may only specify known properties, and 'brand' does not exist in type 'Without<SupplementPrescriptionCreateInput, SupplementPrescriptionUncheckedCreateInput> & SupplementPrescriptionUncheckedCreateInput'.
src/services/nutrition/supplement-prescription.service.ts(309,11): error TS2353: Object literal may only specify known properties, and 'nutritionist' does not exist in type 'SupplementPrescriptionInclude<DefaultArgs>'.
src/services/nutrition/supplement-prescription.service.ts(449,11): error TS2353: Object literal may only specify known properties, and 'nutritionist' does not exist in type 'SupplementPrescriptionInclude<DefaultArgs>'.
src/services/nutrition/supplement-prescription.service.ts(620,11): error TS2353: Object literal may only specify known properties, and 'nutritionist' does not exist in type 'SupplementPrescriptionInclude<DefaultArgs>'.
src/services/system-health.service.ts(16,8): error TS2307: Cannot find module '../../shared/types/system-health' or its corresponding type declarations.
src/services/user-analytics.service.ts(16,8): error TS2307: Cannot find module '../../shared/types/user-analytics' or its corresponding type declarations.
src/services/user-analytics.service.ts(224,24): error TS2345: Argument of type 'number' is not assignable to parameter of type 'never'.
src/services/whatsapp/whatsapp.service.ts(83,9): error TS2322: Type 'string[] | undefined' is not assignable to type 'string | undefined'.
  Type 'string[]' is not assignable to type 'string'.
src/services/whatsapp/whatsapp.service.ts(86,27): error TS2339: Property 'tenantId' does not exist on type 'WhatsAppMessage'.
src/services/whatsapp/whatsapp.service.ts(165,64): error TS2353: Object literal may only specify known properties, and 'tenantId' does not exist in type 'WhatsAppMessage'.
src/services/whatsapp/whatsapp.service.ts(319,11): error TS2561: Object literal may only specify known properties, but 'messageId' does not exist in type 'Without<WhatsAppMessageUncheckedCreateInput, WhatsAppMessageCreateInput> & WhatsAppMessageCreateInput'. Did you mean to write 'message'?
src/services/whatsapp/whatsapp.service.ts(331,49): error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.
npm error Lifecycle script `build` failed with error:
npm error code 2
npm error path E:\Documentos\Desenvolvimento\Sistudo\fitOS\src\backend
npm error workspace fitos-backend@1.0.0
npm error location E:\Documentos\Desenvolvimento\Sistudo\fitOS\src\backend
npm error command failed
npm error command C:\WINDOWS\system32\cmd.exe /d /s /c tsc
