# FitOS - Debug Dockerfile for Coolify
FROM node:20-alpine

# Instalar dependências do sistema
RUN apk add --no-cache \
    dumb-init \
    curl \
    && rm -rf /var/cache/apk/*

# Criar usuário não-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S fitos -u 1001

WORKDIR /app

# Copiar package.json files
COPY package*.json ./
COPY src/frontend/package*.json ./src/frontend/
COPY src/backend/package*.json ./src/backend/

# Instalar dependências root
RUN npm ci

# Copiar código fonte
COPY src/ ./src/
COPY scripts/ ./scripts/

# Debug: Verificar estrutura
RUN ls -la /app
RUN ls -la /app/src

# Debug: Verificar se os scripts existem
RUN cat package.json | grep -A 5 -B 5 "build"

# Debug: Tentar build do backend primeiro
RUN cd src/backend && npm run build

# Debug: Tentar build do frontend
RUN cd src/frontend && npm run build

# Build da aplicação completa
RUN npm run build

# Criar diretórios necessários
RUN mkdir -p /app/uploads /app/logs

# Configurar permissões
RUN chown -R fitos:nodejs /app
USER fitos

# Expor portas
EXPOSE 3000 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3001/api/health || exit 1

# Comando de inicialização
ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "start"]
