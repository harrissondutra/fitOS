#!/usr/bin/env node

const { PrismaClient } = require('@prisma/client');

async function testConnection() {
  const prisma = new PrismaClient({
    datasources: {
      db: {
        url: process.env.DATABASE_URL || 'postgresql://postgres:Sistudo2025%21@150.136.182.94:5432/sistudo'
      }
    }
  });

  try {
    console.log('üîç Testando conex√£o com o banco de dados...');
    console.log('DATABASE_URL:', process.env.DATABASE_URL);
    
    await prisma.$connect();
    console.log('‚úÖ Conex√£o com o banco de dados estabelecida com sucesso!');
    
    // Testar uma query simples
    const result = await prisma.$queryRaw`SELECT 1 as test`;
    console.log('‚úÖ Query de teste executada:', result);
    
  } catch (error) {
    console.error('‚ùå Erro ao conectar com o banco de dados:');
    console.error('Erro:', error.message);
    console.error('C√≥digo:', error.code);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('üí° O banco de dados n√£o est√° acess√≠vel. Verifique:');
      console.log('   - Se o servidor est√° rodando');
      console.log('   - Se a porta est√° correta (5432 ou 5433)');
      console.log('   - Se o firewall permite conex√µes');
    }
    
    if (error.code === 'P1001') {
      console.log('üí° N√£o foi poss√≠vel conectar ao servidor do banco de dados. Verifique:');
      console.log('   - Se o servidor est√° rodando');
      console.log('   - Se o host e porta est√£o corretos');
    }
    
    if (error.code === 'P1000') {
      console.log('üí° Falha na autentica√ß√£o. Verifique:');
      console.log('   - Se o usu√°rio e senha est√£o corretos');
      console.log('   - Se o banco de dados existe');
    }
    
  } finally {
    await prisma.$disconnect();
  }
}

testConnection();
